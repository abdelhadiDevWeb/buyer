// apply plugin: 'com.android.application'
// apply plugin: 'kotlin-android'

// android {
//     namespace "com.mazadclick.buyer"
//     compileSdk rootProject.ext.compileSdkVersion

//     defaultConfig {
//         applicationId "com.mazadclick.buyer"
//         minSdkVersion rootProject.ext.minSdkVersion
//         targetSdkVersion rootProject.ext.targetSdkVersion
//         versionCode 1
//         versionName "1.0"
//         testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
//         aaptOptions {
//             ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~'
//         }
//     }

//     compileOptions {
//         sourceCompatibility JavaVersion.VERSION_17
//         targetCompatibility JavaVersion.VERSION_17
//     }

//     kotlinOptions {
//         jvmTarget = "17"
//     }

//     buildTypes {
//         release {
//             minifyEnabled false
//             proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//         }
//     }
// }

// repositories {
//     flatDir {
//         dirs '../capacitor-cordova-android-plugins/src/main/libs', 'libs'
//     }
// }

// dependencies {
//     implementation fileTree(include: ['*.jar'], dir: 'libs')
//     implementation "androidx.appcompat:appcompat:$androidxAppCompatVersion"
//     implementation "androidx.coordinatorlayout:coordinatorlayout:$androidxCoordinatorLayoutVersion"
//     implementation "androidx.core:core-splashscreen:$coreSplashScreenVersion"
//     implementation project(':capacitor-android')
//     testImplementation "junit:junit:$junitVersion"
//     androidTestImplementation "androidx.test.ext:junit:$androidxJunitVersion"
//     androidTestImplementation "androidx.test.espresso:espresso-core:$androidxEspressoCoreVersion"
//     implementation project(':capacitor-cordova-android-plugins')
// }

// apply from: 'capacitor.build.gradle'

// try {
//     def servicesJSON = file('google-services.json')
//     if (servicesJSON.text) {
//         apply plugin: 'com.google.gms.google-services'
//     }
// } catch(Exception e) {
//     logger.info("google-services.json not found, google-services plugin not applied. Push Notifications won't work")
// }

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
    namespace "com.mazadclick.buyer"
    compileSdk 35  // حدد رقم SDK مباشرة لتجنب أي خطأ في rootProject.ext

    defaultConfig {
        applicationId "com.mazadclick.buyer"
        minSdk 23
        targetSdk 35
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        aaptOptions {
            ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = "17"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

repositories {
    google()
    mavenCentral()
    flatDir {
        dirs '../capacitor-cordova-android-plugins/src/main/libs', 'libs'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "androidx.appcompat:appcompat:1.7.0"
    implementation "androidx.coordinatorlayout:coordinatorlayout:1.2.0"
    implementation "androidx.core:core-splashscreen:1.0.1"
    implementation project(':capacitor-android')
    testImplementation "junit:junit:4.13.2"
    androidTestImplementation "androidx.test.ext:junit:1.2.1"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.6.1"
    implementation project(':capacitor-cordova-android-plugins')
}

apply from: 'capacitor.build.gradle'

// Google services plugin
try {
    def servicesJSON = file('google-services.json')
    if (servicesJSON.text) {
        apply plugin: 'com.google.gms.google-services'
    }
} catch(Exception e) {
    logger.info("google-services.json not found, google-services plugin not applied. Push Notifications won't work")
}
